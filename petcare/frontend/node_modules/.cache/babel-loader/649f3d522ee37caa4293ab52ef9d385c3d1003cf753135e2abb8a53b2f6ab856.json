{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      mascotas: [],\n      mascota: {\n        id: null,\n        nombre: '',\n        especie: '',\n        raza: '',\n        edad: 1,\n        duenio: {\n          id: null\n        }\n      },\n      editMode: false,\n      userId: null\n    };\n  },\n  created() {\n    this.userId = this.$route.params.id; // Obtén el ID del dueño desde los parámetros de la ruta\n    this.cargarMascotas(); // Carga las mascotas al iniciar el componente\n  },\n  methods: {\n    irADescripcion() {\n      // Redirige a la vista de descripción pasando el userId\n      this.$router.push({\n        name: 'solicitarserviciocliente',\n        params: {\n          id: this.userId\n        }\n      });\n    },\n    async cargarMascotas() {\n      try {\n        const response = await fetch(`http://localhost:8080/api/mascotas?duenoId=${this.userId}`);\n        if (!response.ok) {\n          throw new Error(`Error al cargar las mascotas: ${response.statusText}`);\n        }\n        this.mascotas = await response.json();\n      } catch (error) {\n        console.error(error.message);\n      }\n    },\n    async guardarMascota() {\n      this.mascota.duenio.id = this.userId;\n      const method = this.editMode ? 'PUT' : 'POST';\n      const url = this.editMode ? `http://localhost:8080/api/mascotas/${this.mascota.id}` : 'http://localhost:8080/api/mascotas/registrar';\n      try {\n        const response = await fetch(url, {\n          method: method,\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            ...this.mascota,\n            duenio: {\n              id: this.mascota.duenio.id\n            }\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`Error al guardar la mascota: ${response.statusText}`);\n        }\n        this.limpiarFormulario();\n        this.cargarMascotas(); // Recarga la lista de mascotas\n      } catch (error) {\n        console.error(error.message);\n      }\n    },\n    limpiarFormulario() {\n      this.mascota = {\n        id: null,\n        nombre: '',\n        especie: '',\n        raza: '',\n        edad: 1,\n        duenio: {\n          id: null\n        }\n      };\n      this.editMode = false;\n    },\n    editarMascota(mascota) {\n      this.mascota = {\n        ...mascota,\n        duenio: {\n          id: mascota.duenio.id\n        }\n      };\n      this.editMode = true;\n    },\n    async eliminarMascota(id) {\n      const confirmDelete = confirm(\"¿Estás seguro de que deseas eliminar esta mascota?\");\n      if (confirmDelete) {\n        try {\n          const response = await fetch(`http://localhost:8080/api/mascotas/${id}`, {\n            method: 'DELETE'\n          });\n          if (!response.ok) {\n            throw new Error(`Error al eliminar la mascota: ${response.statusText}`);\n          }\n          this.cargarMascotas(); // Recargar la lista de mascotas\n        } catch (error) {\n          console.error(error.message);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","mascotas","mascota","id","nombre","especie","raza","edad","duenio","editMode","userId","created","$route","params","cargarMascotas","methods","irADescripcion","$router","push","name","response","fetch","ok","Error","statusText","json","error","console","message","guardarMascota","method","url","headers","body","JSON","stringify","limpiarFormulario","editarMascota","eliminarMascota","confirmDelete","confirm"],"sources":["D:\\CAMILA\\UPC\\Ciclo 6\\Diseño de Experimentos\\Trabajo grupal\\Web-App\\petcare\\frontend\\src\\components\\MascotasList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h1 class=\"text-center\">Lista de Mascotas</h1>\r\n    <button @click=\"irADescripcion\" class=\"btn btn-primary\">Solicitar Servicio a Domicilio</button>\r\n    <form @submit.prevent=\"guardarMascota\" class=\"mb-4\">\r\n      <div class=\"form-group\">\r\n        <label for=\"nombre\">Nombre:</label>\r\n        <input type=\"text\" v-model=\"mascota.nombre\" class=\"form-control\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"especie\">Especie:</label>\r\n        <input type=\"text\" v-model=\"mascota.especie\" class=\"form-control\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"raza\">Raza:</label>\r\n        <input type=\"text\" v-model=\"mascota.raza\" class=\"form-control\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"edad\">Edad:</label>\r\n        <input type=\"number\" v-model=\"mascota.edad\" class=\"form-control\" required min=\"1\" />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary w-100\">\r\n        {{ editMode ? 'Actualizar Mascota' : 'Registrar Mascota' }}\r\n      </button>\r\n    </form>\r\n\r\n    <h2 class=\"text-center\">Listado de Mascotas</h2>\r\n    <ul class=\"list-group mb-4\">\r\n      <li v-for=\"mascota in mascotas\" :key=\"mascota.id\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n        <div>\r\n          <strong>{{ mascota.nombre }}</strong> - {{ mascota.especie }}\r\n        </div>\r\n        <div>\r\n          <button @click=\"editarMascota(mascota)\" class=\"btn btn-warning btn-sm\">Editar</button>\r\n          <button @click=\"eliminarMascota(mascota.id)\" class=\"btn btn-danger btn-sm\">Eliminar</button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      mascotas: [],\r\n      mascota: {\r\n        id: null,\r\n        nombre: '',\r\n        especie: '',\r\n        raza: '',\r\n        edad: 1,\r\n        duenio: {\r\n          id: null,\r\n        },\r\n      },\r\n      editMode: false,\r\n      userId: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.userId = this.$route.params.id; // Obtén el ID del dueño desde los parámetros de la ruta\r\n    this.cargarMascotas(); // Carga las mascotas al iniciar el componente\r\n  },\r\n  methods: {\r\n    irADescripcion() {\r\n      // Redirige a la vista de descripción pasando el userId\r\n      this.$router.push({ name: 'solicitarserviciocliente', params: { id: this.userId } });\r\n    },\r\n    async cargarMascotas() {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/api/mascotas?duenoId=${this.userId}`);\r\n        if (!response.ok) {\r\n          throw new Error(`Error al cargar las mascotas: ${response.statusText}`);\r\n        }\r\n        this.mascotas = await response.json();\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    },\r\n    async guardarMascota() {\r\n      this.mascota.duenio.id = this.userId;\r\n      const method = this.editMode ? 'PUT' : 'POST';\r\n      const url = this.editMode ? `http://localhost:8080/api/mascotas/${this.mascota.id}` : 'http://localhost:8080/api/mascotas/registrar';\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method: method,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            ...this.mascota,\r\n            duenio: { id: this.mascota.duenio.id },\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Error al guardar la mascota: ${response.statusText}`);\r\n        }\r\n\r\n        this.limpiarFormulario();\r\n        this.cargarMascotas(); // Recarga la lista de mascotas\r\n      } catch (error) {\r\n        console.error(error.message);\r\n      }\r\n    },\r\n    limpiarFormulario() {\r\n      this.mascota = {\r\n        id: null,\r\n        nombre: '',\r\n        especie: '',\r\n        raza: '',\r\n        edad: 1,\r\n        duenio: {\r\n          id: null,\r\n        },\r\n      };\r\n      this.editMode = false;\r\n    },\r\n    editarMascota(mascota) {\r\n      this.mascota = { ...mascota, duenio: { id: mascota.duenio.id } };\r\n      this.editMode = true;\r\n    },\r\n    async eliminarMascota(id) {\r\n      const confirmDelete = confirm(\"¿Estás seguro de que deseas eliminar esta mascota?\");\r\n      if (confirmDelete) {\r\n        try {\r\n          const response = await fetch(`http://localhost:8080/api/mascotas/${id}`, {\r\n            method: 'DELETE',\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error(`Error al eliminar la mascota: ${response.statusText}`);\r\n          }\r\n\r\n          this.cargarMascotas(); // Recargar la lista de mascotas\r\n        } catch (error) {\r\n          console.error(error.message);\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Tus estilos aquí */\r\n</style>\r\n"],"mappings":";AA0CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;QACPC,EAAE,EAAE,IAAI;QACRC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,CAAC;QACPC,MAAM,EAAE;UACNL,EAAE,EAAE;QACN;MACF,CAAC;MACDM,QAAQ,EAAE,KAAK;MACfC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,MAAK,GAAI,IAAI,CAACE,MAAM,CAACC,MAAM,CAACV,EAAE,EAAE;IACrC,IAAI,CAACW,cAAc,CAAC,CAAC,EAAE;EACzB,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,0BAA0B;QAAEN,MAAM,EAAE;UAAEV,EAAE,EAAE,IAAI,CAACO;QAAO;MAAE,CAAC,CAAC;IACtF,CAAC;IACD,MAAMI,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMC,KAAK,CAAC,8CAA8C,IAAI,CAACX,MAAM,EAAE,CAAC;QACzF,IAAI,CAACU,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiCH,QAAQ,CAACI,UAAU,EAAE,CAAC;QACzE;QACA,IAAI,CAACvB,QAAO,GAAI,MAAMmB,QAAQ,CAACK,IAAI,CAAC,CAAC;MACvC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;MAC9B;IACF,CAAC;IACD,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,CAAC3B,OAAO,CAACM,MAAM,CAACL,EAAC,GAAI,IAAI,CAACO,MAAM;MACpC,MAAMoB,MAAK,GAAI,IAAI,CAACrB,QAAO,GAAI,KAAI,GAAI,MAAM;MAC7C,MAAMsB,GAAE,GAAI,IAAI,CAACtB,QAAO,GAAI,sCAAsC,IAAI,CAACP,OAAO,CAACC,EAAE,EAAC,GAAI,8CAA8C;MAEpI,IAAI;QACF,MAAMiB,QAAO,GAAI,MAAMC,KAAK,CAACU,GAAG,EAAE;UAChCD,MAAM,EAAEA,MAAM;UACdE,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB,GAAG,IAAI,CAACjC,OAAO;YACfM,MAAM,EAAE;cAAEL,EAAE,EAAE,IAAI,CAACD,OAAO,CAACM,MAAM,CAACL;YAAG;UACvC,CAAC;QACH,CAAC,CAAC;QAEF,IAAI,CAACiB,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgCH,QAAQ,CAACI,UAAU,EAAE,CAAC;QACxE;QAEA,IAAI,CAACY,iBAAiB,CAAC,CAAC;QACxB,IAAI,CAACtB,cAAc,CAAC,CAAC,EAAE;MACzB,EAAE,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;MAC9B;IACF,CAAC;IACDQ,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAAClC,OAAM,GAAI;QACbC,EAAE,EAAE,IAAI;QACRC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,CAAC;QACPC,MAAM,EAAE;UACNL,EAAE,EAAE;QACN;MACF,CAAC;MACD,IAAI,CAACM,QAAO,GAAI,KAAK;IACvB,CAAC;IACD4B,aAAaA,CAACnC,OAAO,EAAE;MACrB,IAAI,CAACA,OAAM,GAAI;QAAE,GAAGA,OAAO;QAAEM,MAAM,EAAE;UAAEL,EAAE,EAAED,OAAO,CAACM,MAAM,CAACL;QAAG;MAAE,CAAC;MAChE,IAAI,CAACM,QAAO,GAAI,IAAI;IACtB,CAAC;IACD,MAAM6B,eAAeA,CAACnC,EAAE,EAAE;MACxB,MAAMoC,aAAY,GAAIC,OAAO,CAAC,oDAAoD,CAAC;MACnF,IAAID,aAAa,EAAE;QACjB,IAAI;UACF,MAAMnB,QAAO,GAAI,MAAMC,KAAK,CAAC,sCAAsClB,EAAE,EAAE,EAAE;YACvE2B,MAAM,EAAE;UACV,CAAC,CAAC;UAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiCH,QAAQ,CAACI,UAAU,EAAE,CAAC;UACzE;UAEA,IAAI,CAACV,cAAc,CAAC,CAAC,EAAE;QACzB,EAAE,OAAOY,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;QAC9B;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}