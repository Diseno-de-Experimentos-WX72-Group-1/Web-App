{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '../utils/axios';\nexport default {\n  data() {\n    return {\n      loginRequest: {\n        correo: '',\n        contraseña: ''\n      },\n      mensaje: ''\n    };\n  },\n  methods: {\n    async iniciarSesion() {\n      try {\n        const response = await axios.post('/usuarios/login', this.loginRequest);\n        const rol = response.data.rol; // Ahora deberías poder obtener el rol\n\n        // Redirige según el rol\n        if (rol === 'dueno') {\n          const userId = response.data.id;\n          this.$router.push({\n            name: 'DashboardCliente',\n            params: {\n              id: userId\n            }\n          });\n        } else if (rol === 'veterinario') {\n          const userId = response.data.id;\n          this.$router.push({\n            name: 'DashboardVeterinario',\n            params: {\n              id: userId\n            }\n          });\n        } else if (rol === 'admin') {\n          const userId = response.data.id;\n          this.$router.push({\n            name: 'DassboardCiita',\n            params: {\n              id: userId\n            }\n          });\n        } else {\n          this.mensaje = 'Rol de usuario no reconocido';\n        }\n      } catch (error) {\n        this.mensaje = 'Error al iniciar sesión: ' + (error.response?.data || error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","loginRequest","correo","contraseña","mensaje","methods","iniciarSesion","response","post","rol","userId","id","$router","push","name","params","error","message"],"sources":["D:\\CAMILA\\UPC\\Ciclo 6\\Diseño de Experimentos\\Trabajo grupal\\Web-App\\petcare\\frontend\\src\\components\\LoginComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h1 class=\"text-center\">Inicio de Sesión</h1>\r\n    <form @submit.prevent=\"iniciarSesion\" class=\"mt-4\">\r\n      <div class=\"mb-3\">\r\n        <label for=\"correo\" class=\"form-label\">Correo:</label>\r\n        <input \r\n          v-model=\"loginRequest.correo\" \r\n          id=\"correo\" \r\n          type=\"email\" \r\n          class=\"form-control\" \r\n          required \r\n        />\r\n      </div>\r\n      <div class=\"mb-3\">\r\n        <label for=\"contraseña\" class=\"form-label\">Contraseña:</label>\r\n        <input \r\n          type=\"password\" \r\n          v-model=\"loginRequest.contraseña\" \r\n          id=\"contraseña\" \r\n          class=\"form-control\" \r\n          required \r\n        />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary w-100\">Iniciar Sesión</button>\r\n    </form>\r\n    \r\n    <div v-if=\"mensaje\" class=\"mt-3 alert alert-danger\" role=\"alert\">\r\n      {{ mensaje }}\r\n    </div>\r\n\r\n    <!-- Botón de registrarse -->\r\n    <div class=\"text-center mt-3\">\r\n      <p>¿No tienes una cuenta? <router-link to=\"/registro\" class=\"btn btn-link\">Registrarse</router-link></p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from '../utils/axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginRequest: {\r\n        correo: '',\r\n        contraseña: '',\r\n      },\r\n      mensaje: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async iniciarSesion() {\r\n      try {\r\n        const response = await axios.post('/usuarios/login', this.loginRequest);\r\n        const rol = response.data.rol; // Ahora deberías poder obtener el rol\r\n\r\n        // Redirige según el rol\r\n        if (rol === 'dueno') {\r\n          const userId = response.data.id; \r\n          this.$router.push({ name: 'DashboardCliente', params: { id: userId } });\r\n        } else if (rol === 'veterinario') {\r\n          const userId = response.data.id; \r\n          this.$router.push({ name: 'DashboardVeterinario', params: { id: userId } });\r\n        } else if (rol === 'admin') {\r\n          const userId = response.data.id; \r\n          this.$router.push({ name: 'DassboardCiita', params: { id: userId } });\r\n        } else {\r\n          this.mensaje = 'Rol de usuario no reconocido';\r\n        }\r\n        \r\n      } catch (error) {\r\n        this.mensaje = 'Error al iniciar sesión: ' + (error.response?.data || error.message);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos opcionales */\r\n</style>\r\n"],"mappings":";AAuCA,OAAOA,KAAI,MAAO,gBAAgB;AAElC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,UAAU,EAAE;MACd,CAAC;MACDC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAACP,YAAY,CAAC;QACvE,MAAMQ,GAAE,GAAIF,QAAQ,CAACP,IAAI,CAACS,GAAG,EAAE;;QAE/B;QACA,IAAIA,GAAE,KAAM,OAAO,EAAE;UACnB,MAAMC,MAAK,GAAIH,QAAQ,CAACP,IAAI,CAACW,EAAE;UAC/B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE,kBAAkB;YAAEC,MAAM,EAAE;cAAEJ,EAAE,EAAED;YAAO;UAAE,CAAC,CAAC;QACzE,OAAO,IAAID,GAAE,KAAM,aAAa,EAAE;UAChC,MAAMC,MAAK,GAAIH,QAAQ,CAACP,IAAI,CAACW,EAAE;UAC/B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE,sBAAsB;YAAEC,MAAM,EAAE;cAAEJ,EAAE,EAAED;YAAO;UAAE,CAAC,CAAC;QAC7E,OAAO,IAAID,GAAE,KAAM,OAAO,EAAE;UAC1B,MAAMC,MAAK,GAAIH,QAAQ,CAACP,IAAI,CAACW,EAAE;UAC/B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE,gBAAgB;YAAEC,MAAM,EAAE;cAAEJ,EAAE,EAAED;YAAO;UAAE,CAAC,CAAC;QACvE,OAAO;UACL,IAAI,CAACN,OAAM,GAAI,8BAA8B;QAC/C;MAEF,EAAE,OAAOY,KAAK,EAAE;QACd,IAAI,CAACZ,OAAM,GAAI,2BAA0B,IAAKY,KAAK,CAACT,QAAQ,EAAEP,IAAG,IAAKgB,KAAK,CAACC,OAAO,CAAC;MACtF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}