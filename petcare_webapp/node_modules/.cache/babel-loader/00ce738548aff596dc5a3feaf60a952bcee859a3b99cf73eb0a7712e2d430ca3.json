{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  type: \"submit\",\n  class: \"btn btn-primary w-100\"\n};\nconst _hoisted_7 = {\n  class: \"list-group mb-4\"\n};\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", {\n    class: \"text-center\"\n  }, \"Lista de Mascotas\", -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.guardarMascota && $options.guardarMascota(...args), [\"prevent\"])),\n    class: \"mb-4\"\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"nombre\"\n  }, \"Nombre:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.mascota.nombre = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.mascota.nombre]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"especie\"\n  }, \"Especie:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.mascota.especie = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.mascota.especie]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    for: \"raza\"\n  }, \"Raza:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.mascota.raza = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.mascota.raza]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    for: \"edad\"\n  }, \"Edad:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.mascota.edad = $event),\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.mascota.edad]])]), _createElementVNode(\"button\", _hoisted_6, _toDisplayString($data.editMode ? 'Actualizar Mascota' : 'Registrar Mascota'), 1)], 32), _cache[10] || (_cache[10] = _createElementVNode(\"h2\", {\n    class: \"text-center\"\n  }, \"Listado de Mascotas\", -1)), _createElementVNode(\"ul\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.mascotas, mascota => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: mascota.id,\n      class: \"list-group-item d-flex justify-content-between align-items-center\"\n    }, [_createElementVNode(\"div\", null, [_createElementVNode(\"strong\", null, _toDisplayString(mascota.nombre), 1), _createTextVNode(\" - \" + _toDisplayString(mascota.especie), 1)]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editarMascota(mascota),\n      class: \"btn btn-warning btn-sm\"\n    }, \"Editar\", 8, _hoisted_8), _createElementVNode(\"button\", {\n      onClick: $event => $options.eliminarMascota(mascota.id),\n      class: \"btn btn-danger btn-sm\"\n    }, \"Eliminar\", 8, _hoisted_9)])]);\n  }), 128))])]);\n}","map":{"version":3,"names":["class","type","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","guardarMascota","_hoisted_2","for","$event","$data","mascota","nombre","required","_hoisted_3","especie","_hoisted_4","raza","_hoisted_5","edad","_hoisted_6","_toDisplayString","editMode","_hoisted_7","_Fragment","_renderList","mascotas","key","id","_createTextVNode","onClick","editarMascota","_hoisted_8","eliminarMascota","_hoisted_9"],"sources":["D:\\CAMILA\\UPC\\Ciclo 6\\Diseño de Experimentos\\Trabajo grupal\\Web-App\\petcare_webapp\\src\\components\\MascotasList.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n   <h1 class=\"text-center\">Lista de Mascotas</h1>\r\n    <!--<button @click=\"irADescripcion\" class=\"btn btn-primary\">Solicitar Servicio a Domicilio</button>-->\r\n    <form @submit.prevent=\"guardarMascota\" class=\"mb-4\">\r\n      <div class=\"form-group\">\r\n        <label for=\"nombre\">Nombre:</label>\r\n        <input type=\"text\" v-model=\"mascota.nombre\" class=\"form-control\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"especie\">Especie:</label>\r\n        <input type=\"text\" v-model=\"mascota.especie\" class=\"form-control\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"raza\">Raza:</label>\r\n        <input type=\"text\" v-model=\"mascota.raza\" class=\"form-control\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"edad\">Edad:</label>\r\n        <input type=\"number\" v-model=\"mascota.edad\" class=\"form-control\" required />\r\n      </div>\r\n      <button type=\"submit\" class=\"btn btn-primary w-100\">\r\n        {{ editMode ? 'Actualizar Mascota' : 'Registrar Mascota' }}\r\n      </button>\r\n    </form>\r\n\r\n    <h2 class=\"text-center\">Listado de Mascotas</h2>\r\n    <ul class=\"list-group mb-4\">\r\n      <li v-for=\"mascota in mascotas\" :key=\"mascota.id\" class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n        <div>\r\n          <strong>{{ mascota.nombre }}</strong> - {{ mascota.especie }}\r\n        </div>\r\n        <div>\r\n          <button @click=\"editarMascota(mascota)\" class=\"btn btn-warning btn-sm\">Editar</button>\r\n          <button @click=\"eliminarMascota(mascota.id)\" class=\"btn btn-danger btn-sm\">Eliminar</button>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n  </div>\r\n \r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      mascotas: [],\r\n      mascota: {\r\n        id: null,\r\n        nombre: '',\r\n        especie: '',\r\n        raza: '',\r\n        edad: 1,\r\n        duenio: {\r\n          id: null,\r\n        },\r\n      },\r\n      editMode: false,\r\n      userId: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.userId = this.$route.params.id; // Obtén el ID del dueño desde los parámetros de la ruta\r\n    this.cargarMascotas(); // Carga las mascotas al iniciar el componente\r\n  },\r\n  methods: {\r\n    irADescripcion() {\r\n        // Redirige a la vista de descripción pasando el userId\r\n        this.$router.push({ name: 'solicitarserviciocliente', params: { id: this.userId } });\r\n      },\r\n    async cargarMascotas() {\r\n      // Cargar las mascotas asociadas al ID del dueño\r\n      const response = await fetch(`/api/mascotas?duenoId=${this.userId}`);\r\n      if (response.ok) {\r\n        this.mascotas = await response.json();\r\n      } else {\r\n        console.error(\"Error al cargar las mascotas:\", response.statusText);\r\n      }\r\n    },\r\n    async guardarMascota() {\r\n      this.mascota.duenio.id = this.userId;\r\n\r\n      const method = this.editMode ? 'PUT' : 'POST';\r\n      const url = this.editMode ? `/api/mascotas/${this.mascota.id}` : '/api/mascotas/registrar';\r\n\r\n      const response = await fetch(url, {\r\n        method: method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...this.mascota,\r\n          duenio: { id: this.mascota.duenio.id },\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        this.limpiarFormulario();\r\n        this.cargarMascotas(); // Recarga la lista de mascotas\r\n      } else {\r\n        console.error(\"Error al guardar la mascota:\", response.statusText);\r\n      }\r\n    },\r\n    limpiarFormulario() {\r\n      this.mascota = {\r\n        id: null,\r\n        nombre: '',\r\n        especie: '',\r\n        raza: '',\r\n        edad: 1,\r\n        duenio: {\r\n          id: null,\r\n        },\r\n      };\r\n      this.editMode = false;\r\n    },\r\n    editarMascota(mascota) {\r\n      this.mascota = { ...mascota, duenio: { id: mascota.duenio.id } };\r\n      this.editMode = true;\r\n    },\r\n    async eliminarMascota(id) {\r\n      const confirmDelete = confirm(\"¿Estás seguro de que deseas eliminar esta mascota?\");\r\n      if (confirmDelete) {\r\n        const response = await fetch(`/api/mascotas/${id}`, {\r\n          method: 'DELETE',\r\n        });\r\n\r\n        if (response.ok) {\r\n          this.cargarMascotas(); // Recargar la lista de mascotas\r\n        } else {\r\n          console.error(\"Error al eliminar la mascota:\", response.statusText);\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Tus estilos aquí */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}