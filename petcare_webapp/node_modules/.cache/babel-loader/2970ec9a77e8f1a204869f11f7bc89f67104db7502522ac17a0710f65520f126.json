{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      cita: {\n        fechaCita: '',\n        horaCita: '',\n        motivo: '',\n        idMascota: null,\n        idVeterinario: null\n      },\n      mensaje: '',\n      mascotas: [],\n      // Lista de mascotas\n      veterinarios: [] // Lista de veterinarios\n    };\n  },\n  methods: {\n    async programarCita() {\n      try {\n        const citaConMascota = {\n          ...this.cita,\n          mascota: {\n            id: this.cita.idMascota\n          },\n          veterinario: {\n            id: this.cita.idVeterinario\n          }\n        };\n        const response = await axios.post('http://localhost:8080/api/citas/programar', citaConMascota);\n        this.mensaje = 'Cita programada exitosamente: ' + response.data.id;\n\n        // Reiniciar el formulario\n        this.cita = {\n          fechaCita: '',\n          horaCita: '',\n          motivo: '',\n          idMascota: null,\n          idVeterinario: null\n        };\n      } catch (error) {\n        if (error.response) {\n          this.mensaje = 'Error en la respuesta: ' + error.response.data.message;\n        } else if (error.request) {\n          this.mensaje = 'Error: No se pudo contactar con el servidor';\n        } else {\n          this.mensaje = 'Error: ' + error.message;\n        }\n      }\n    },\n    async cargarDatos() {\n      try {\n        // Obtener mascotas\n        const responseMascotas = await axios.get('http://localhost:8080/api/citas/mascotas');\n        this.mascotas = responseMascotas.data;\n\n        // Obtener veterinarios con rol de veterinario\n        const responseVeterinarios = await axios.get('http://localhost:8080/api/citas/usuarios/veterinarios');\n        this.veterinarios = responseVeterinarios.data;\n      } catch (error) {\n        console.error('Error cargando datos: ', error);\n      }\n    }\n  },\n  mounted() {\n    // Cargar las mascotas y veterinarios al cargar el componente\n    this.cargarDatos();\n  }\n};","map":{"version":3,"names":["axios","data","cita","fechaCita","horaCita","motivo","idMascota","idVeterinario","mensaje","mascotas","veterinarios","methods","programarCita","citaConMascota","mascota","id","veterinario","response","post","error","message","request","cargarDatos","responseMascotas","get","responseVeterinarios","console","mounted"],"sources":["D:\\CAMILA\\UPC\\Ciclo 6\\Dise√±o de Experimentos\\Trabajo grupal\\Web-App\\petcare_webapp\\src\\components\\CitaVeterinaria.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mt-5\">\r\n    <h2 class=\"text-center mb-4\">Programar Cita Veterinaria ...</h2>\r\n    <form @submit.prevent=\"programarCita\" class=\"shadow p-4 bg-light rounded\">\r\n      <div class=\"form-group\">\r\n        <label for=\"fechaCita\">Fecha de Cita:</label>\r\n        <input type=\"date\" id=\"fechaCita\" v-model=\"cita.fechaCita\" class=\"form-control\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"horaCita\">Hora de Cita:</label>\r\n        <input type=\"time\" id=\"horaCita\" v-model=\"cita.horaCita\" class=\"form-control\" required />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"motivo\">Motivo:</label>\r\n        <input type=\"text\" id=\"motivo\" v-model=\"cita.motivo\" class=\"form-control\" placeholder=\"Motivo de la cita\" required />\r\n      </div>\r\n\r\n      <!-- Desplegable de Mascotas -->\r\n      <div class=\"form-group\">\r\n        <label for=\"mascotaId\">Mascota:</label>\r\n        <select v-model=\"cita.idMascota\" id=\"mascotaId\" class=\"form-control\" required>\r\n          <option v-for=\"mascota in mascotas\" :key=\"mascota.id\" :value=\"mascota.id\">\r\n            {{ mascota.nombre }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- Desplegable de Veterinarios -->\r\n      <div class=\"form-group\">\r\n        <label for=\"veterinarioId\">Veterinario:</label>\r\n        <select v-model=\"cita.idVeterinario\" id=\"veterinarioId\" class=\"form-control\" required>\r\n          <option v-for=\"veterinario in veterinarios\" :key=\"veterinario.id\" :value=\"veterinario.id\">\r\n            {{ veterinario.nombre }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"btn btn-primary btn-block\">Programar Cita</button>\r\n    </form>\r\n\r\n    <div v-if=\"mensaje\" class=\"alert alert-info mt-3\">{{ mensaje }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cita: {\r\n        fechaCita: '',\r\n        horaCita: '',\r\n        motivo: '',\r\n        idMascota: null,\r\n        idVeterinario: null\r\n      },\r\n      mensaje: '',\r\n      mascotas: [], // Lista de mascotas\r\n      veterinarios: [] // Lista de veterinarios\r\n    };\r\n  },\r\n  methods: {\r\n    async programarCita() {\r\n      try {\r\n        const citaConMascota = {\r\n          ...this.cita,\r\n          mascota: { id: this.cita.idMascota },\r\n          veterinario: { id: this.cita.idVeterinario }\r\n        };\r\n\r\n        const response = await axios.post('http://localhost:8080/api/citas/programar', citaConMascota);\r\n        this.mensaje = 'Cita programada exitosamente: ' + response.data.id;\r\n\r\n        // Reiniciar el formulario\r\n        this.cita = {\r\n          fechaCita: '',\r\n          horaCita: '',\r\n          motivo: '',\r\n          idMascota: null,\r\n          idVeterinario: null\r\n        };\r\n      } catch (error) {\r\n        if (error.response) {\r\n          this.mensaje = 'Error en la respuesta: ' + error.response.data.message;\r\n        } else if (error.request) {\r\n          this.mensaje = 'Error: No se pudo contactar con el servidor';\r\n        } else {\r\n          this.mensaje = 'Error: ' + error.message;\r\n        }\r\n      }\r\n    },\r\n    async cargarDatos() {\r\n      try {\r\n        // Obtener mascotas\r\n        const responseMascotas = await axios.get('http://localhost:8080/api/citas/mascotas');\r\n        this.mascotas = responseMascotas.data;\r\n\r\n        // Obtener veterinarios con rol de veterinario\r\n        const responseVeterinarios = await axios.get('http://localhost:8080/api/citas/usuarios/veterinarios');\r\n        this.veterinarios = responseVeterinarios.data;\r\n      } catch (error) {\r\n        console.error('Error cargando datos: ', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // Cargar las mascotas y veterinarios al cargar el componente\r\n    this.cargarDatos();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  font-size: 28px;\r\n  color: #333;\r\n}\r\n\r\n.alert {\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"AA+CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,SAAS,EAAE,IAAI;QACfC,aAAa,EAAE;MACjB,CAAC;MACDC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,EAAE;MAAE;MACdC,YAAY,EAAE,EAAC,CAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,cAAa,GAAI;UACrB,GAAG,IAAI,CAACX,IAAI;UACZY,OAAO,EAAE;YAAEC,EAAE,EAAE,IAAI,CAACb,IAAI,CAACI;UAAU,CAAC;UACpCU,WAAW,EAAE;YAAED,EAAE,EAAE,IAAI,CAACb,IAAI,CAACK;UAAc;QAC7C,CAAC;QAED,MAAMU,QAAO,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAAC,2CAA2C,EAAEL,cAAc,CAAC;QAC9F,IAAI,CAACL,OAAM,GAAI,gCAA+B,GAAIS,QAAQ,CAAChB,IAAI,CAACc,EAAE;;QAElE;QACA,IAAI,CAACb,IAAG,GAAI;UACVC,SAAS,EAAE,EAAE;UACbC,QAAQ,EAAE,EAAE;UACZC,MAAM,EAAE,EAAE;UACVC,SAAS,EAAE,IAAI;UACfC,aAAa,EAAE;QACjB,CAAC;MACH,EAAE,OAAOY,KAAK,EAAE;QACd,IAAIA,KAAK,CAACF,QAAQ,EAAE;UAClB,IAAI,CAACT,OAAM,GAAI,yBAAwB,GAAIW,KAAK,CAACF,QAAQ,CAAChB,IAAI,CAACmB,OAAO;QACxE,OAAO,IAAID,KAAK,CAACE,OAAO,EAAE;UACxB,IAAI,CAACb,OAAM,GAAI,6CAA6C;QAC9D,OAAO;UACL,IAAI,CAACA,OAAM,GAAI,SAAQ,GAAIW,KAAK,CAACC,OAAO;QAC1C;MACF;IACF,CAAC;IACD,MAAME,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF;QACA,MAAMC,gBAAe,GAAI,MAAMvB,KAAK,CAACwB,GAAG,CAAC,0CAA0C,CAAC;QACpF,IAAI,CAACf,QAAO,GAAIc,gBAAgB,CAACtB,IAAI;;QAErC;QACA,MAAMwB,oBAAmB,GAAI,MAAMzB,KAAK,CAACwB,GAAG,CAAC,uDAAuD,CAAC;QACrG,IAAI,CAACd,YAAW,GAAIe,oBAAoB,CAACxB,IAAI;MAC/C,EAAE,OAAOkB,KAAK,EAAE;QACdO,OAAO,CAACP,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EACDQ,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACL,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}